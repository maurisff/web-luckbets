name: CI
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  buildDevelop:
    name: Build Develop
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Install Dependencies
        run: npm install
      - name: Build
        env:
          NODE_ENV: ${{ 'production' }}
          VUE_APP_TITLE: ${{ 'Luck Bets(Develop)' }}
          VUE_APP_AUTH_PROVIDER: ${{ '["PASSWORD","GOOGLE"]' }}
          VUE_APP_ROOT_API: ${{ secrets.DEVELOP_ROOT_API }}
          VUE_APP_FIREBASE_JSON_CONFIG: ${{ secrets.DEVELOP_FIREBASE_JSON_CONFIG }}
        run: npm run build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
  
  deployDevelop:
    name: Deploy Develop
    needs: buildDevelop
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/develop' && success())
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting --project develop
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  
  buildProduction:
    name: Build Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Install Dependencies
        run: npm install
      - name: Build
        env:
          NODE_ENV: ${{ 'production' }}
          VUE_APP_TITLE: ${{ 'Luck Bets' }}
          VUE_APP_AUTH_PROVIDER: ${{ '["PASSWORD","GOOGLE"]' }}
          VUE_APP_ROOT_API: ${{ secrets.PRODUCTION_ROOT_API }}
          VUE_APP_FIREBASE_JSON_CONFIG: ${{ secrets.PRODUCTION_FIREBASE_JSON_CONFIG }}
        run: npm run build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
  
  deployProduction:
    name: Deploy Production
    needs: buildProduction
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/master' && success())
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
